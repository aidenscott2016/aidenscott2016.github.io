{"version":3,"sources":["images/logo.svg","utils/RandomPosition.tsx","shapes/Atom.tsx","shapes/Wiggler.tsx","shapes/Circle.tsx","util.ts","utils/KeyPresser.tsx","App.tsx","index.tsx"],"names":["RandomPosition","withSize","size","children","id","style","position","Atom","className","src","logo","alt","width","height","WrappedAtom","Wiggler","color","tightness","thickness","speed","Circle","backgroundColor","borderRadius","document","documentElement","clientHeight","clientWidth","console","log","Event","KeyPresser","mappings","React","useState","pressedKeys","updatePressedKeys","timeline","updateTimeline","timeElapsed","startTime","setStartTime","useEffect","performance","now","useTimeElapsed","addToTimeline","k","e","addKeyDown","toLowerCase","addKeyUp","play","forEach","t","setTimeout","KeyDown","KeyUp","tabIndex","onKeyDown","key","onKeyUp","s","toUpperCase","onClick","map","m","i","visible","display","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74b59a6e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { SizeMeProps, withSize } from \"react-sizeme\";\n\n// export const RandomPosition = ({ children }: React.PropsWithChildren<{}>) => {\n//   return (\n//     <SizeMe>\n//       <RandomPositionContainer>{children}</RandomPositionContainer>\n//     </SizeMe>\n//   );\n// };\n\nexport const RandomPositionContainer = ({\n  size,\n  children,\n}: React.PropsWithChildren<SizeMeProps>) => {\n    // console.log(\"size\", size)\n    // // useLayoutEffect <- ref to the elem\n    // const random = useRandomPosition(size.height, size.width)\n    // console.log(\"location\", random)\n  return (\n    <div\n      id=\"rando\"\n      style={{\n        // ...random,\n        position: \"absolute\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\n\nexport const RandomPosition = withSize()(RandomPositionContainer);\n","import logo from \"../images/logo.svg\";\nimport { RandomPosition } from \"../utils/RandomPosition\";\n\nexport const Atom = () => {\n  return <img className='spin' src={logo} alt='logo' width='250px' height='250px' />;\n};\n\nexport const WrappedAtom = () => <RandomPosition><Atom/></RandomPosition>","import Wiv from \"react-wiv\";\n\nexport const Wiggler = () => {\n  return (\n    <Wiv color=\"#00FF00\" height={4} tightness={6} thickness={2} speed={0.55}>\n      hello\n    </Wiv>\n  );\n};\n","import React from \"react\";\n\nexport const Circle = () => {\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor: \"red\",\n          height: \"50px\",\n          width: \"50px\",\n          borderRadius: \"25px\",\n          position: \"absolute\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\n\n// const config: ConfettiConfig = {\n//   angle: 191,\n//   spread: 360,\n//   startVelocity: 64,\n//   elementCount: 70,\n//   dragFriction: 0.12,\n//   duration: 2070,\n//   stagger: 3,\n//   width: \"9px\",\n//   height: \"10px\",\n//   colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\n// };\n\n\n\n","import { random } from 'lodash'\n\nconst height = document.documentElement.clientHeight\nconst width = document.documentElement.clientWidth\nconsole.log(\"page\", {height,width})\n\nexport const randomPos = (elWidth, elHeight) => (\n  {\n    top: `${random(0, height - elWidth)}px` ,\n    left: random(0, width - elHeight)\n  }\n)\n\n\nexport const isUpperCase = (s: String) => s === s.toUpperCase()\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport { isUpperCase } from \"../util\";\n\nexport type IsVisible = { visible?: boolean };\ntype Mapping = { key: string; component: (props: IsVisible) => JSX.Element };\ntype Props = {\n  mappings: Mapping[];\n};\n\ntype Seconds = number;\ntype Key = string;\ntype Note = [Seconds, Key, Event];\ntype Timeline = Note[];\nenum Event {\n  KeyUp,\n  KeyDown,\n}\n\nexport const KeyPresser = ({ mappings }: Props) => {\n  const useTimeElapsed = () => {\n    const [startTime, setStartTime] = React.useState(0);\n    React.useEffect(() => {\n      setStartTime(performance.now());\n    }, []);\n    return () => performance.now() - startTime;\n  };\n\n  const [pressedKeys, updatePressedKeys] = React.useState({});\n  const [timeline, updateTimeline] = React.useState<Timeline>([]);\n  const timeElapsed = useTimeElapsed();\n\n  const addToTimeline = (k: Key, e: Event) =>\n    updateTimeline([...timeline, [timeElapsed(), k, e]]);\n\n  const clearTimeline = () => updateTimeline([]);\n  const addKeyDown = (k: Key) =>\n    updatePressedKeys({ ...pressedKeys, [k.toLowerCase()]: true });\n  const addKeyUp = (k: Key) =>\n    updatePressedKeys({ ...pressedKeys, [k.toLowerCase()]: false });\n\n  React.useEffect(() => {\n      console.log(pressedKeys)\n  }, [pressedKeys]);\n\n  const play = () =>\n    timeline.forEach(([t, k, e]) => {\n      setTimeout(() => {\n        switch (e) {\n          case Event.KeyDown:\n            addKeyDown(k);\n            break;\n          case Event.KeyUp:\n            addKeyUp(k);\n        }\n      }, t);\n    });\n\n  const handleKeyDown: React.KeyboardEventHandler = ({ key }) => {\n    addToTimeline(key, Event.KeyDown);\n    addKeyDown(key);\n  };\n  const handleKeyUp: React.KeyboardEventHandler = ({ key }) => {\n    addToTimeline(key, Event.KeyUp);\n    if (!isUpperCase(key)) {\n      addKeyUp(key);\n    }\n  };\n\n  return (\n    <div\n      className=\"full-height\"\n      tabIndex={1}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n    >\n      {/* <button onClick={}>record</button> */}\n      {/* <button>stop recording</button> */}\n      <button onClick={play}>play</button> \n      <button onClick={play}>loop</button> \n      {mappings.map((m, i) => {\n        const visible = pressedKeys[m.key];\n        const style = visible ? {} : { display: \"none\" };\n        return (\n          <div key={i} style={style}>\n            <Draggable>{m.component({ visible })}</Draggable>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { Atom, WrappedAtom } from \"./shapes/Atom\";\nimport { Wiggler } from \"./shapes/Wiggler\";\nimport Wiv from 'react-wiv'\nimport { Circle } from \"./shapes/Circle\";\nimport { KeyPresser } from \"./utils/KeyPresser\";\nimport './style.css'\n\nconst App = () => (\n  <>\n    <KeyPresser\n      mappings={[\n        { key: \"a\", component: WrappedAtom },\n        { key: \"b\", component: Circle },\n        { key: \"w\", component: Wiggler },\n        // { key: \"c\", component:s ConfettiCircle },\n      ]} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}